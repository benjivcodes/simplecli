#!/usr/bin/env bash
# Encrypt/decrypt a file with openssl.
# Create an encrypted dmg on the desktop.

# Load the SimpleCLI 1password-cli functions
source "${HOME}/.simplecli/lib/bash/1passwd-cli"

function secure_description(){
    echo "Secure file and dmg operations using openssl/hdiutil."
}

function passwdcheck(){
  # Requires an ENCRYPTION_PWD to be set from 1password-cli
  if [ -z "${ENCRYPTION_PWD}" ]
  then
    echo -e "\nExpected ENCRYPTION_PWD environment to be set, exiting!"
    exit 1
  fi
}

function secure_help(){
  echo " "
  echo " Create an ecrypted file/dmg from unecrypted source."
  echo " Decrypt source file to unencrypted version."
  echo " "
  echo " USAGE: $(basename "$0") secure <subcommand>"
  echo " "
  echo " AVAILABLE SUBCOMMANDS:"
  echo " "
  echo " dmg    create ecnrypted dmg; takes source folder as argument"
  echo " file   create encrypted file; takes source file as argument"
  echo " decr   decrypt file; takes source file as argument"
  echo " help   returns this message"
  echo " "
}

function secure_handle(){
  command="$1"

  case "$command" in
    dmg)
      passwdcheck
      shift;
      if [[ -z "$1" ]]
      then
        echo -e "\nNo input or output folder specified. Exiting..."
        exit 1
      else
        CREATEOPTS="-ov -encryption AES-256 -stdinpass -scrub -format ULFO -fs APFS -nocrossdev"
        echo "${ENCRYPTION_PWD}" | hdiutil create  "${CREATEOPTS}" -volname "$1" -srcfolder "$1" "${HOME}"/Desktop/"$1"_encrypted.dmg
      fi

      exit 1
    ;;

    file)
      passwdcheck
      shift;
      if [[ -z "$1" ]]
      then
        echo -e "\nNo input or output file specified. Exiting."
        exit 1
      else
        openssl aes-256-cbc -salt -a -e -in "$1" -out "$1".enc -k "${ENCRYPTION_PWD}"
      fi

      exit 1
    ;;

    decr)
      passwdcheck
      shift;
      if [[ -z "$1" ]]
      then
        echo -e "\nNo input or output file specified. Exiting."
        exit 1
      else
        openssl aes-256-cbc -salt -a -e -d -in "$1" -out $(basename -s .enc "$1") -k "${ENCRYPTION_PWD}"
      fi

      exit 1
    ;;

    *)
      secure_help
    ;;
  esac
}
