#!/usr/bin/env bash
# Wrapper for Android tools/SDK

function android_description(){
    echo "Android SDK and Platform toolchain helper for macOS"
}

function android_help(){
  echo -e "\n usage: $(basename "$0") homebrew <subcommand>"
  echo -e "\n AVAILABLE SUBCOMMANDS:\n"
  echo " unlock      Unlock the Boot Loader"
  echo " auto        Perform automated firmware install"
  echo " manual      Perform manual firmware install"
  echo " lock        Lock the Boot Loader"
  echo " fetch       Get the latest Factory and OTA images"
  echo " ota         Peform an OTA firmware image install"
	echo ""
}

function android_handle(){
  command="$1"

  case $command in
  unlock)
    echo -e "\nRebooting into bootloader..."
    adb reboot bootloader
    sleep 10
    echo -e "\nUnlocking bootloader..."
    fastboot flashing unlock
    sleep 10
    fastboot flashing unlock_critical
    sleep 10
  ;;

  auto)
    echo -e "\nAttempting automated install.."
    adb reboot bootloader
    sleep 5
    ./flash-all.sh
    echo -e "\nLocking bootloader..."
    fastboot flashing lock
  ;;

  lock)
    echo -e "\nRebooting into bootloader..."
    adb reboot bootloader
    sleep 5
    echo -e "\nLocking bootloader..."
    fastboot flashing lock
  ;;

  fetch)
    echo ""
    echo "You can get the latest Factory Images from https://developers.google.com/android/images"
    echo "You can get Full OTA Images from https://developers.google.com/android/ota"
    echo ""
  ;;

  ota)
    shift;
    otafile="$1"
    echo -e "\nRebooting into recovery..."
    adb reboot recovery
    sleep 20
    echo -e "\nVerify your device is sideload ready (should appear with ${bold}sideload${normal}..."
    adb devices
    sleep 10
    echo -e "\nBegining sideload of ${otafile}"
    adb sideload "${otafile}"
  ;;

  *)
		android_help
	;;
  esac
}
