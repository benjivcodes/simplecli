#!/usr/bin/env bash
# Switch and manage MacOS locales

function locale_description(){
    echo "set/get the macOS network locale"
}

function locale_help(){
  echo -e "\n usage: $(basename "$0") locale <subcommand>\n"
  echo -e "\n AVAILABLE SUBCOMMANDS:\n"
  echo " set [locale]   Set the macOS network location"
  echo " get            Get the macOS network location"
  echo " noarp          Disable unicast arp"
  echo " noipv6         Disable IPV6 support"
  echo " name           Set the system hostname"
  echo " noguest        Disable Guest login"
  echo ""
}

function locale_handle(){
  command="$1"

  case $command in

  set)
    shift;
    echo -e "\n Setting location to $1 Location..\n"
    sudo networksetup -switchtolocation "$1"
  ;;

  get)
    echo -e "\n You are in the $(networksetup -getcurrentlocation) Location.\n"
  ;;

  noarp)
    sudo sysctl -w net.link.ether.inet.arp_unicast_lim=0 2> /dev/null
    echo "net.link.ether.inet.arp_unicast_lim=0" | sudo tee -a /etc/sysctl.conf 2> /dev/null
    sudo chown root:wheel /etc/sysctl.conf
    sudo chmod 644 /etc/sysctl.conf
  ;;

  noipv6)
    networksetup -listallnetworkservices | while read -r i; do SUPPORT=$(networksetup -getinfo "$i" | grep "IPv6: Automatic") && if [ -n "$SUPPORT" ]; then networksetup -setv6off "$i"; fi; done;
  ;;

  name)
    shift
    sudo scutil --set LocalHostName "$1"
    sudo scutil --set ComputerName "$1"
    sudo scutil --set HostName "$1"
    serialNum=$(ioreg -l | awk '/IOPlatformSerialNumber/ { split($0, line, "\""); printf("%s\n", line[4]); }')
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$serialNum"
  ;;

  noguest)
    sudo defaults write /Library/Preferences/com.apple.AppleFileServer guestAccess -bool NO
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server AllowGuestAccess -bool N
  ;;

  *)
    locale_help
  ;;

  esac
}
