#!/usr/bin/env bash
# Connect to variety of hosts by location/type.

# Disclaimer: while support for corporate VPNS exists this is in no way supported
# or endorsed by IT Support. This script will not bypass any protections
# or policies put in place on managed networks.

# Requires the following environment variables to be set or set+renamed:
# BASTION_DEV == the bastion host used to access the non-prod environment
# BASTION_PROD == the bastion used to access the production environment
# VPN_DEFAULT_GW == the default gateway/route that should be present when connected

function con_help(){
  echo ""
  echo " Connect to a variety of hosts by location/type. Please read DISCLAIMER"
  echo " contained within the cli/bin/con file for additional details on usage."
  echo ""
  echo " -p connect to production host; takes one argument, requires vpn conection"
  echo " -t connect to production host using Thycotic creds; takes one argument, requires vpn connection"
  echo " -d connect to development host; takes one argument"
  echo " -l connect to local host (on same network, or does not require a bastion); takes one argument"
  echo " -b connect to bastion host; takes one argument, may require vpn connection"
  echo " -h display this help"
  echo ""
  exit 1
}

# Check for a valid bastion.
function bastcheck(){
  if [[ -z "${BASTION_DEV}" || -z "${BASTION_PROD}" ]]
  then
    echo -e "\nExpected BASTION_DEV and BASTION_PROD environment to be set, exiting!"
    exit 1
  fi
}

# Support for vpns via BigIP client.
function vpncheck(){
  if [[ -z "${VPN_DEFAULT_GW}" ]]
  then
    echo -e "\nExpected VPN_DEFAULT_GW to be set, exiting!"
    exit 1
  fi

  /usr/sbin/netstat -nr -f inet | grep -i ^default | grep -i -q ${VPN_DEFAULT_GW}
  status="$?"
  if [ $status -gt 0 ]
  then
    echo -e "\nDoesn't look like you're connected to correct VPN!\n"
    exit 1
  fi
}

while true
do
  case "$1" in
    -p)
      vpncheck
      bastcheck
      shift;
      /usr/bin/ssh -4 -t ${BASTION_PROD} -t /usr/bin/ssh -4 $1
      exit 1
    ;;

    -t)
      vpncheck
      shift;
      thyssh $1
      exit 1
    ;;

    -d)
      bastcheck
      shift;
      /usr/bin/ssh -4 -t ${BASTION_DEV} -t /usr/bin/ssh -4 $1
      exit 1
    ;;

    -l)
      shift;
      /usr/bin/ssh -4 -t $1
      exit 1
    ;;

    -b)
      bastcheck
      shift;
      if [ "$1" == "dev" ]
      then
        ssh ${BASTION_DEV}
      elif [ "$1" == "prod" ]
      then
        vpncheck
        ssh ${BASTION_PROD}
      fi
      exit 1
      ;;

    -h)
      con_help
      exit 1
    ;;

    *)
      con_help
      exit 1
    ;;
  esac
done
