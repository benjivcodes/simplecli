#!/usr/bin/env bash
# Encrypt/decrypt a file with openssl.
# Create an encrypted dmg on the desktop.

function passwd_check(){
  if [[ -z "${ENCRYPTION_PWD}" ]]; then
      echo -e "\nExpected ENCRYPTION_PWD environment to be set, exiting!"
  fi
}

function secure_help(){
  echo ""
  echo " Create an ecrypted file/dmg from unecrypted source."
  echo " Decrypt source file to unencrypted version."
  echo ""
  echo " -i create ecnrypted dmg; takes source file as argument"
  echo " -e create encrypted file; takes source file as argument"
  echo " -d decrypte file; takes source file as argument"
  echo " -h displays this help"
  echo ""
  exit 1
}

while true; do
  case "$1" in
    -h)
      secure_help
      exit 1
    ;;

    -i)
      shift;
      if [ -z $1 ];
      then
        echo -e "\nNo input or output file specified. Exiting."
        exit 1
      else
        hdiutil create -encryption -stdinpass -srcfolder "$1" "$1_encrypted.dmg"
        mv "$1_encrypted.dmg" "${HOME}/Desktop"
      fi

      exit 1
    ;;

    -e)
      passwd_check
      shift;
      if [ -z $1 ];
      then
        echo -e "\nNo input or output file specified. Exiting."
        exit 1
      else
        openssl aes-256-cbc -salt -a -e -in "$1" -out "$1".enc -k "${ENCRYPTION_PWD}"
      fi

      exit 1
    ;;

    -d)
      passwd_check
      shift;
      if [ -z $1 ];
      then
        echo -e "\nNo input or output file specified. Exiting."
        exit 1
      else
        openssl aes-256-cbc -salt -a -e -d -in "$1" -out $(basename -s .enc "$1") -k "${ENCRYPTION_PWD}"
      fi

      exit 1
    ;;

    *)
      echo "No valid arguments supplied."
      exit 1
    ;;
  esac
done
