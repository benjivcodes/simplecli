#!/usr/bin/env bash
# A simple command line based extensible toolchain for MacOS.

bash_source="${BASH_SOURCE[0]}"
if [[ -h $bash_source ]]
then
  bash_source="$(readlink "$bash_source")"
fi

bold=$(tput bold)
normal=$(tput sgr0)
cli_lib="${CLIHOME}/lib"
command_dir="${CLIHOME}/lib/commands"
available_commands=()

function source_commands(){
  for c in $(/bin/ls ${command_dir})
  do
    available_commands+=("${c}")
  done

  for f in "${command_dir}"/*
  do
    source "$f"
  done
}

function handle_command(){
  source_commands

  if [[ $# -lt 1 ]]
  then
    usage
  else
    command="$1"
    shift
    "${command}"_handle "$@"
  fi
}

function usage(){
  echo " "
  echo " A simple command line based extensible toolchain for MacOS."
  echo " "
  echo "  USAGE: $(basename "$0") <command> <subcommand> [parameters]"
  echo " "
  echo "  To see help text, you can run:"
  echo "  cli help"
  echo "  cli <command> help"
  echo "  cli <subcommand> help"
  echo " "
}

function help(){
  echo " "
  echo " A simple command line based extensible toolchain for MacOS."
  echo " "
  echo " AVAILABLE COMMANDS:"
  echo " "
  source_commands
  for command in "${available_commands[@]}"
  do
    echo " ${command} :::: $(${command}_description)"
  done
   echo " "
}

command="$1"
case $command in
  help)
    help
  ;;

  *)
    handle_command "$@"
  ;;
esac
