#!/usr/bin/env bash
# shellcheck disable=SC1090
# shellcheck disable=SC1090
# shellcheck disable=SC2046
# shellcheck disable=SC2086
# shellcheck disable=SC2071

# Install the SimpleCLI tool

clear
cd "$(dirname ${BASH_SOURCE[0]})" || return 1
DIR="$(pwd)"
INSTALLDIR="${HOME}/.simplecli"
<<<<<<< HEAD
XCODETOOLSVER="$(pkgutil --pkg-info=com.apple.pkg.CLTools_Executables | grep -i version | awk -F': ' '{print $2}')"

function install_core(){
  if [ ! "${XCODETOOLSVER}" > "0" ]
  then
    echo -e "\nWaiting for Xcode Command Line Tools install..."
    xcode-select --install
    read -n 1 -s -r -p "Press any key to continue"
  else
    echo -e "\nXcode Command Line Tools version ${XCODETOOLSVER} found..."
  fi

  echo -e "Running core install cmds..."
  mkdir -p "${INSTALLDIR}/bin" "${INSTALLDIR}/lib"
=======

function install() {
  clear

  echo -e "Running core install cmds..."
  mkdir -p "${INSTALLDIR}/bin ${INSTALLDIR}/lib"
>>>>>>> 37c6d98f6aaae1452cf4c85ea727be08a857af93
  rsync -azh "${DIR}/bin/" "${INSTALLDIR}/bin/"
  rsync -azh "${DIR}/lib/" "${INSTALLDIR}/lib/"
  cd "${INSTALLDIR}/bin/" || return 1
  chmod +x ./*

  echo -e "Running pip3 installs..."
  cd "${HOME}" || exit 1
  python3 -m venv "${USER}-env"
  "${HOME}/bva-env/bin/python3" -m pip install --upgrade pip | { grep -v "already satisfied" || :; }
  source "${HOME}/${USER}-env/bin/activate"
  set -o pipefail; pip3 install -r "${DIR}/requirements.txt" | { grep -v "already satisfied" || :; }
  deactivate

<<<<<<< HEAD
  echo -e "\nInstalling BaSH configuration"
=======
  echo -e "\nInstalling BasSH configuration"
>>>>>>> 37c6d98f6aaae1452cf4c85ea727be08a857af93
  if [ -e "${HOME}/.bash_profile" ] || [ -e "${HOME}/.bashrc" ]
  then
    echo -e "\tBaSH config detected, exiting..."
    echo -e "\tManaul install commmand:"
    echo -e "\tAdd the following to your .bash_profile or .bashrc"
    echo -e "\tsource ${INSTALLDIR}/lib/bash/common"
    echo -e "\tsource ${INSTALLDIR}/lib/bash/1passwd-cli"
  else
    cp "${INSTALLDIR}/lib/bash/bash_profile" "${HOME}/.bash_profile"
  fi

<<<<<<< HEAD
  echo -e "\nSimpleCLI core successfully installed"
}

=======
  echo -e "\n\nSimpleCLI core successfully installed"
}

function link_bashy(){
  which -a npm > /dev/null || echo -e "\n!!! npm not found, please install NPM or update your PATH"
  cd "${INSTALLDIR}/lib/bashy" || echo -e "\n!!! bashy not available, please update SimpleCLI"
  echo -e "\nLinking Bashy..."

  if [ -e "${HOME}/.npmrc" ]
  then
    echo -e "\tnpmrc config detected, exiting Bashy setup..."
    echo -e "\tManual install command:"
    echo -e "\tcd ${INSTALLDIR}/lib/bashy && npm link > /dev/null"
  else
    export NPM_PACKAGES="${HOME}/.npm-packages"
    echo "prefix=${HOME}/.npm-packages" > "${HOME}/.npmrc"
    npm link > /dev/null
    echo -e "BASHY successfully installed..."
  fi
}

>>>>>>> 37c6d98f6aaae1452cf4c85ea727be08a857af93
function install_homebrew(){
  echo -e "\nInstalling homebrew..."
  if [ -e "/usr/local/bin/brew" ]
  then
    echo -e "\tHomebrew install detected, exiting..."
<<<<<<< HEAD
    echo -e "\tManual install command:"
    echo -e "\tbrew install \$(< ${DIR}/brew_requirements.txt)"
  else
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    brew install $(< "${DIR}/brew_requirements.txt")
=======
  else
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    xargs brew install < "${INSTALLDIR}/lib//brew_bootstrap_packages" 
>>>>>>> 37c6d98f6aaae1452cf4c85ea727be08a857af93
  fi
}

function free_disk(){
  echo -e "\nSimpleCLI core will require ~15M of disk space. You have $(df -h / | tail -1 | awk '{print $4}') on / ..."
  echo -e "If Homebrew and brew_requirements are installed as part of this script it will require another ~6G of space..."
  echo -en "\nPress enter key to continue...\n"
  read -rs
}

if [[ ! "$(uname -s)" == "Darwin" ]]
then
  echo -e "\nThis is macOS specific CLI; some things will work fine others won't."
  echo -e "Install will continue but you have been warned... \[._.]/"
<<<<<<< HEAD
  echo -en "\nPress enter key to continue...\n"
  read -rs
fi
=======
  echo -en "\nPress enter key to continue."
  read -rs
  reset
fi

install
link_bashy
install_homebrew
>>>>>>> 37c6d98f6aaae1452cf4c85ea727be08a857af93

free_disk
install_core
install_homebrew
echo -e "\n"
